package rules
import java.util.Scanner;
import music.Question;
import music.Question.Answer;
import music.Controller
import javafx.application.Platform
import java.lang.reflect.AnnotatedWildcardType
import java.util.concurrent.CompletableFuture;
dialect  "mvel"


declare FIXED
    f : Boolean
end


rule "INIT"
when
then
    insert(Controller.loadQuestion(1));
    System.out.println("xd");
end


rule "AskQuestion"
when
    qu : Question(q != null, a == Answer.NONE)
then
    Controller.view.displayQuestion(qu);
    //CompletableFuture.runAsync(()->System.out.printf("kupa")).thenAccept(i -> System.out.printf("elo"));
//    while (qu.getA() != Answer.NONE );
//    update(qu);
    //Controller.view.displayQuestion(qu);
//    if(qu.advice != null) System.out.println(qu.advice);
//    if(qu.q != null) {
//        System.out.println(qu.q);
//        System.out.print(">> ");
//        Scanner keyboard = new Scanner(System.in);
//        String answer = keyboard.nextLine();
//        if(answer == "y" || answer == "yes") qu.a = Answer.YES;
//        else qu.a = Answer.NO;
//        update(qu);
//    }
end




rule "ShowFinalAdvice"
when
    qu : Question(q == null)
then
    Controller.view.displayQuestion(qu);
    insert(new FIXED())
end

rule "IsFixed"
when
    FIXED()
then
    Controller.view.displayFinished();
end