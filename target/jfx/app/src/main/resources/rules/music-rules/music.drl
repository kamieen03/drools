package rules;
dialect  "mvel"
import music.Question
import music.Question.Answer
import java.util.Scanner
import music.Controller

declare FIXED
    f : Boolean
end

rule "1_NO"
when
    Question(id == 1, a == Answer.NO)
then
    insert(Controller.loadQuestion(2));
end

rule "2_YES"
when
    Question(id == 2, a == Answer.YES)
then
    insert(Controller.loadQuestion(3));
end

rule "3_NO"
when
    Question(id == 3, a == Answer.NO)
then
    insert(Controller.loadQuestion(4));
end

rule "4_NO"
when
    Question(id == 4, a == Answer.NO)
then
    insert(Controller.loadQuestion(5));
end


rule "5_NO"
when
    Question(id == 5, a == Answer.NO)
then
    insert(Controller.loadQuestion(6));
end


rule "6_NO"
when
    Question(id == 6, a == Answer.NO)
then
    insert(Controller.loadQuestion(7));
end


rule "7_NO"
when
    Question(id == 7, a == Answer.NO)
then
    insert(Controller.loadQuestion(8));
end


rule "7_YES"
when
    Question(id == 7, a == Answer.YES)
then
    insert(Controller.loadQuestion(9));
end


rule "6_YES"
when
    Question(id == 6, a == Answer.YES)
then
    insert(Controller.loadQuestion(10));
end


rule "5_YES"
when
    Question(id == 5, a == Answer.YES)
then
    insert(new FIXED());
end

rule "4_YES"
when
    Question(id == 4, a == Answer.YES)
then
    insert(Controller.loadQuestion(11));
end


rule "11_NO"
when
    Question(id == 11, a == Answer.NO)
then
    insert(Controller.loadQuestion(12));
end


rule "11_YES"
when
    Question(id == 11, a == Answer.YES)
then
    insert(Controller.loadQuestion(13));
end


rule "3_YES"
when
    Question(id == 3, a == Answer.YES)
then
    insert(new FIXED());
end


rule "2_NO"
when
    Question(id == 2, a == Answer.NO)
then
    insert(Controller.loadQuestion(14));
end


rule "14_YES"
when
    Question(id == 14, a == Answer.YES)
then
    insert(Controller.loadQuestion(15));
end


rule "15_YES"
when
    Question(id == 15, a == Answer.YES)
then
    insert(Controller.loadQuestion(16));
end


rule "15_NO"
when
    Question(id == 15, a == Answer.NO)
then
    insert(Controller.loadQuestion(17));
end


rule "17_NO"
when
    Question(id == 17, a == Answer.NO)
then
    insert(new FIXED());
end

rule "17_YES"
when
    Question(id == 17, a == Answer.YES)
then
    insert(Controller.loadQuestion(18));
end


rule "14_NO"
when
    Question(id == 14, a == Answer.NO)
then
    insert(Controller.loadQuestion(19));
end

//----------right half-----------

rule "1_YES"
when
    Question(id == 1, a == Answer.YES)
then
    insert(Controller.loadQuestion(20)) ;
end


rule "20_YES"
when
    Question(id == 20, a == Answer.YES)
then
    insert(Controller.loadQuestion(21)) ;
end


rule "21_NO"
when
    Question(id == 21, a == Answer.NO)
then
    insert(Controller.loadQuestion(22)) ;
end

rule "21_YES"
when
    Question(id == 21, a == Answer.YES)
then
    insert(new FIXED());
end

rule "22_NO"
when
    Question(id == 22, a == Answer.NO)
then
    insert(Controller.loadQuestion(23)) ;
end

rule "22_YES"
when
    Question(id == 22, a == Answer.YES)
then
    insert(new FIXED()) ;
end

rule "23_NO"
when
    Question(id == 23, a == Answer.NO)
then
    insert(Controller.loadQuestion(24)) ;
end

rule "23_YES"
when
    Question(id == 23, a == Answer.YES)
then
    insert(new FIXED()) ;
end

rule "24_NO"
when
    Question(id == 24, a == Answer.NO)
then
    insert(Controller.loadQuestion(25)) ;
end

rule "24_YES"
when
    Question(id == 24, a == Answer.YES)
then
    insert(new FIXED()) ;
end

rule "25_NO"
when
    Question(id == 25, a == Answer.NO)
then
    insert(Controller.loadQuestion(26)) ;
end

rule "25_YES"
when
    Question(id == 25, a == Answer.YES)
then
    insert(new FIXED());
end

rule "26_NO"
when
    Question(id == 26, a == Answer.NO)
then
    insert(Controller.loadQuestion(27)) ;
end

rule "26_YES"
when
    Question(id == 26, a == Answer.YES)
then
    insert(new FIXED()) ;
end

rule "20_NO"
when
    Question(id == 20, a == Answer.NO)
then
    insert(Controller.loadQuestion(28)) ;
end

rule "28_NO"
when
    Question(id == 28, a == Answer.NO)
then
    insert(Controller.loadQuestion(18)) ;
end

rule "28_YES"
when
    Question(id == 28, a == Answer.YES)
then
    insert(new FIXED()) ;
end

